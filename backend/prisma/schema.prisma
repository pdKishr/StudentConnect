// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
    //basic mandatory information
    id               String   @id @default(uuid())
    name             String? 
    email            String   @unique
    password         String
    mobile_number    String   @unique

    //other personal details
    language         String[]
    city             String?
    state            String?
    country          String?
    profilePicture   String?

    // socials & education
    linkedin         String?
    resume           String?
    highestDegree    String?
    course           String?
    college          String?

    //app specific
    isActive            Boolean  @default(true)
    completePercentage  Int      @default(0)
    createdAt           DateTime @default(now())
    updatedAt           DateTime @updatedAt  
    purchase            Purchase[]

    // booking of free trials at max 10 only
    trialbooking        TrialBooking[]
  
}

model Mentor{
    // basic mandatory details
    id               String   @id @default(uuid())
    name             String?   
    email            String   @unique
    password         String
    mobile_number    String   @unique
    profilePicture   String?
    city             String?
    state            String?
    country          String?
 
    // education and work experience
    education        Education[]
    workExperience   WorkExperience[]
    skill            String[]
    currentlyWorking Boolean  @default(true)
    yearsofExperience Int?         
    domain            String?   
    tools             String[]
    
    //socials 
    linkedin         String?
    Instagram        String?
     
    // about
    about            String?   
    language         String[]
     
    //Bookings
    menteesCount     Int  @default(0)
    availableTime    AvailableTime[]
    price_1month     Int?
    price_3month     Int?
    price_6month     Int?
    sessionsPerMonth Int?
    sessionsCount    Int  @default(0)
    menteeMinutes    Int  @default(0)
    trialbooking     TrialBooking[] 
    purchase         Purchase[]

    //app specific
    isActive         Boolean  @default(true)
    verified         Boolean  @default(false)
    createdAt        DateTime @default(now())
    updatedAt        DateTime @updatedAt
}

model AvailableTime{
    id            String  @default(uuid())
    mentorId      String
    mentor        Mentor  @relation(fields:[id],references: [id], onDelete: Cascade)
    day           Int     // 0 for sun, 1 for mon , .........., 6 for sat
    availability  Boolean @default(false)
    startTime     String?  // 7.00 AM
    endTime       String?  // 12.00 pm

    @@id([mentorId,day]) 
}

model Education{
    id        String  @id @default(cuid())
    mentorId  String  
    mentor    Mentor  @relation(fields:[mentorId],references: [id], onDelete: Cascade)
    college   String
    degree    String
    course    String
    startYear String
    endYear   String
}

model WorkExperience{
      id          String  @id @default(cuid())
      mentorId    String 
      mentor      Mentor  @relation(fields:[mentorId],references: [id], onDelete: Cascade)
      company     String
      role        String
      startYear   String
      endYear     String    
}

model Purchase{
      id                 String @id @default(uuid())
      userId             String
      user               User   @relation(fields:[userId],references:[id], onDelete: Cascade)
      mentorId           String
      mentor             Mentor @relation(fields:[mentorId],references:[id], onDelete: Cascade)
      plan               String
      duration           Int // 30days or 90days or 180 days
      startDate          DateTime
      endDate            DateTime
      totalSessions      Int
      availableSessions  Int
}

model TrialBooking{
     id            String @id @default(uuid())
     userId        String
     user          User   @relation(fields:[userId] ,references: [id])
     mentorId      String
     mentor        Mentor @relation(fields:[mentorId],references: [id])
     bookingStatus status @default(upcoming)
     startTime     String
}

enum status{
    upcoming
    ongoing
    completed
}

model Admin{
    id           String   @id @default(uuid())
    email        String   @unique
    password     String   
}